{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A CloudFormation template for Cloud front.",
  "Parameters": {
    "ACCOUNTID": {
      "Type": "String",
      "Description": "Account ID"
    },
    "VPC": {
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetA": {
      "Type": "AWS::EC2::Subnet::Id"
    },
    "SubnetB": {
      "Type": "AWS::EC2::Subnet::Id"
    },
    "HealthCheckPath": {
      "Type": "String",
      "Default": "/health-check"
    },
    "HostedZoneName": {
      "Type": "String"
    },
    "Subdomain": {
      "Type": "String",
      "Default": "rx-powet-cf"
    },
    "RegexPatternSetsName": {
      "Type": "String",
      "Default": "RxPowetRegexPatternSet"
    }
  },
  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "rxpowet-bucket-02-bucket-website"
      }
    },
    "S3BucketLogs": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "rxpowet-bucket-02-cloudfront-logs"
      }
    },
    "BucketPolicyLogs": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "MyPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                      {
                        "Fn::GetAtt": [
                          "RxCloudFrontOriginAccessIdentity",
                          "Id"
                        ]
                      }
                    ]
                  ]
                }
              },
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3BucketLogs"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Bucket": {
          "Ref": "S3BucketLogs"
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "MyPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                      {
                        "Fn::GetAtt": [
                          "RxCloudFrontOriginAccessIdentity",
                          "Id"
                        ]
                      }
                    ]
                  ]
                }
              },
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Bucket": {
          "Ref": "S3Bucket"
        }
      }
    },
    "RxCloudFrontOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Origin One"
        }
      }
    },
    "RxCloudFrontFunction": {
      "Type": "AWS::CloudFront::Function",
      "Properties": {
        "AutoPublish": true,
        "FunctionCode": "function handler(event) {var request = event.request; if (!request.uri.includes('.')) {request.uri = '/index.html';request.querystring = {} }  return request; }",
        "FunctionConfig": {
          "Comment": "testing this thing out",
          "Runtime": "cloudfront-js-1.0"
        },
        "Name": "rx-handle-routes"
      }
    },
    "ApiCachePolicy": {
      "Type": "AWS::CloudFront::CachePolicy",
      "Properties": {
        "CachePolicyConfig": {
          "Comment": "This an api cache policy comment",
          "DefaultTTL": 0,
          "MaxTTL": 0,
          "MinTTL": 0,
          "Name": "cloudfront-origin-request-policy",
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "EnableAcceptEncodingBrotli": false,
            "EnableAcceptEncodingGzip": false,
            "CookiesConfig": {
              "CookieBehavior": "none"
            },
            "HeadersConfig": {
              "HeaderBehavior": "none"
            },
            "QueryStringsConfig": {
              "QueryStringBehavior": "none"
            }
          }
        }
      }
    },
    "RxPowetDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "Id": "static",
              "DomainName": {
                "Fn::GetAtt": [
                  "S3Bucket",
                  "DomainName"
                ]
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Fn::GetAtt": [
                          "RxCloudFrontOriginAccessIdentity",
                          "Id"
                        ]
                      }
                    ]
                  ]
                }
              }
            },
            {
              "Id": "dynamic",
              "DomainName": "rx-powet-prod.cmcloudlab1000.info",
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "match-viewer"
              }
            }
          ],
          "Enabled": "true",
          "Comment": "Some comment",
          "DefaultRootObject": "index.html",
          "Logging": {
            "IncludeCookies": "true",
            "Bucket": {
              "Fn::GetAtt": [
                "S3BucketLogs",
                "DomainName"
              ]
            },
            "Prefix": "myprefix"
          },
          "DefaultCacheBehavior": {
            "TargetOriginId": "static",
            "ForwardedValues": {
              "QueryString": "false",
              "Cookies": {
                "Forward": "none"
              }
            },
            "DefaultTTL": 0,
            "MaxTTL": 0,
            "MinTTL": 0,
            "ViewerProtocolPolicy": "allow-all"
          },
          "CacheBehaviors": [
            {
              "Compress": true,
              "DefaultTTL": 0,
              "MaxTTL": 0,
              "MinTTL": 0,
              "CachePolicyId": {
                "Fn::GetAtt": [
                  "ApiCachePolicy",
                  "Id"
                ]
              },
              "PathPattern": "/api/*",
              "TargetOriginId": "dynamic",
              "ViewerProtocolPolicy": "allow-all"
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "MaxTTL": 0,
              "MinTTL": 0,
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "PathPattern": "/",
              "TargetOriginId": "static",
              "ViewerProtocolPolicy": "allow-all"
            }
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 1,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "WebACLId": {
            "Fn::GetAtt": [
              "WebACL",
              "Arn"
            ]
          }
        }
      }
    },
    "RxPowetRegexPatternSet": {
      "Type": "AWS::WAFv2::RegexPatternSet",
      "Properties": {
        "Name": {
          "Ref": "RegexPatternSetsName"
        },
        "Scope": "CLOUDFRONT",
        "Description": "This is an example RegexPatternSet",
        "RegularExpressionList": [
          "^\/static.*css$",
          "^\/static.*js$",
          "^\/*\\.png$",
          "^\/products$",
          "^\/api\/products$"
        ]
      }
    },
    "WebACL": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "DefaultAction": {
          "Block": {}
        },
        "Description": "Rx Powet Firewall",
        "Name": "rx-powet-website-acl",
        "Rules": [
          {
            "Name": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
            "Priority": 0,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "VendorName": "AWS",
                "Name": "AWSManagedRulesKnownBadInputsRuleSet"
              }
            },
            "OverrideAction": {
              "None": {}
            },
            "VisibilityConfig": {
              "SampledRequestsEnabled": true,
              "CloudWatchMetricsEnabled": false,
              "MetricName": "AWS-AWSManagedRulesKnownBadInputsRuleSet"
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAmazonIpReputationList",
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "VendorName": "AWS",
                "Name": "AWSManagedRulesAmazonIpReputationList"
              }
            },
            "OverrideAction": {
              "None": {}
            },
            "VisibilityConfig": {
              "SampledRequestsEnabled": true,
              "CloudWatchMetricsEnabled": false,
              "MetricName": "AWS-AWSManagedRulesAmazonIpReputationList"
            }
          },
          {
            "Name": "allowed-list",
            "Priority": 2,
            "Statement": {
              "RegexPatternSetReferenceStatement": {
                "Arn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:wafv2:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":global/regexpatternset/",
                      {
                        "Ref": "RegexPatternSetsName"
                      },
                      "/",
                      {
                        "Fn::GetAtt": [
                          "RxPowetRegexPatternSet",
                          "Id"
                        ]
                      }
                    ]
                  ]
                },
                "FieldToMatch": {
                  "UriPath": {}
                },
                "TextTransformations": [
                  {
                    "Priority": 0,
                    "Type": "NONE"
                  }
                ]
              }
            },
            "Action": {
              "Allow": {}
            },
            "VisibilityConfig": {
              "SampledRequestsEnabled": true,
              "CloudWatchMetricsEnabled": false,
              "MetricName": "count_allowed_list"
            }
          }
        ],
        "Scope": "CLOUDFRONT",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": false,
          "MetricName": "count-rx-powet-website-acl",
          "SampledRequestsEnabled": true
        }
      }
    }
  },
  "Outputs": {
    "DistributionDomainName": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "RxPowetDistribution",
                "DomainName"
              ]
            }
          ]
        ]
      },
      "Description": "Distribution domain name for website content"
    }
  }
}